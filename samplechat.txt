<!DOCTYPE html>
<html>
<head>
    <title>SignalR Test</title>
    <script src="https://unpkg.com/@microsoft/signalr@latest/dist/browser/signalr.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        #status { padding: 10px; margin: 10px 0; border-radius: 5px; }
        .connected { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .disconnected { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .connecting { background-color: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
        #messages { border: 1px solid #ccc; height: 300px; overflow-y: auto; padding: 10px; margin: 10px 0; }
        .message { margin: 5px 0; padding: 5px; background-color: #f8f9fa; border-radius: 3px; }
        .system-message { color: #6c757d; font-style: italic; }
        input, button { padding: 8px; margin: 5px; }
        button { background-color: #007bff; color: white; border: none; border-radius: 3px; cursor: pointer; }
        button:hover { background-color: #0056b3; }
        button:disabled { background-color: #6c757d; cursor: not-allowed; }
    </style>
</head>
<body>
    <h1>SignalR TestHub Connection Test</h1>
    <div id="status" class="connecting">Connecting to TestHub...</div>
    
    <h3>Connection Details:</h3>
    <div id="connectionInfo">No connection info available</div>
    
    <h3>Messages:</h3>
    <div id="messages"></div>
    
    <div>
        <input type="text" id="messageInput" placeholder="Enter test message" />
        <button id="sendButton" onclick="sendMessage()" disabled>Send Test Message</button>
        <button onclick="clearMessages()">Clear Messages</button>
    </div>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("http://localhost:5005/testhub", {
                withCredentials: false
            })
            .configureLogging(signalR.LogLevel.Information)
            .build();

        let isConnected = false;
        const statusDiv = document.getElementById('status');
        const messagesDiv = document.getElementById('messages');

        connection.start().then(function () {
            isConnected = true;
            statusDiv.innerHTML = "✅ Successfully connected to TestHub!";
            statusDiv.className = "connected";
            document.getElementById("sendButton").disabled = false;
            
            document.getElementById("connectionInfo").innerHTML = `
                <strong>Connection ID:</strong> ${connection.connectionId}<br>
                <strong>Hub URL:</strong> http://localhost:5005/testhub<br>
                <strong>State:</strong> ${connection.state}<br>
                <strong>Connected at:</strong> ${new Date().toLocaleString()}
            `;
            
            addSystemMessage("Connected to TestHub successfully!");
            console.log("Connected to SignalR Hub");
        }).catch(function (err) {
            isConnected = false;
            statusDiv.innerHTML = "❌ Connection failed: " + err.toString();
            statusDiv.className = "disconnected";
            document.getElementById("connectionInfo").innerHTML = `<strong>Error:</strong> ${err.toString()}`;
            addSystemMessage("Connection failed: " + err.toString());
            console.error("Connection failed: ", err);
        });

        connection.onclose(function () {
            isConnected = false;
            statusDiv.innerHTML = "❌ Connection closed";
            statusDiv.className = "disconnected";
            document.getElementById("sendButton").disabled = true;
            addSystemMessage("Connection closed");
            console.log("Disconnected from SignalR Hub");
        });

        connection.on("UserConnected", function (connectionId) {
            addSystemMessage(`User connected: ${connectionId}`);
        });

        connection.on("UserDisconnected", function (connectionId) {
            addSystemMessage(`User disconnected: ${connectionId}`);
        });

        connection.on("ReceiveTestMessage", function (connectionId, message) {
            addMessage(`Message from ${connectionId}: ${message}`);
        });

        function addMessage(text) {
            const div = document.createElement("div");
            div.className = "message";
            div.innerHTML = `<strong>[${new Date().toLocaleTimeString()}]</strong> ${text}`;
            messagesDiv.appendChild(div);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        function addSystemMessage(text) {
            const div = document.createElement("div");
            div.className = "message system-message";
            div.innerHTML = `<strong>[${new Date().toLocaleTimeString()}]</strong> <em>System:</em> ${text}`;
            messagesDiv.appendChild(div);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        function sendMessage() {
            if (!isConnected) {
                alert("Not connected to hub!");
                return;
            }
            
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value.trim();
            
            if (message === "") {
                alert("Please enter a message");
                return;
            }
            
            connection.invoke("SendTestMessage", message)
                .then(function() {
                    addSystemMessage(`Message sent successfully: "${message}"`);
                })
                .catch(function (err) {
                    addSystemMessage(`Error sending message: ${err.toString()}`);
                    console.error("Error sending message: ", err);
                });
            
            messageInput.value = "";
        }

        function clearMessages() {
            messagesDiv.innerHTML = "";
        }

        // Allow sending message with Enter key
        document.getElementById("messageInput").addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                sendMessage();
            }
        });
    </script>
</body>
</html>